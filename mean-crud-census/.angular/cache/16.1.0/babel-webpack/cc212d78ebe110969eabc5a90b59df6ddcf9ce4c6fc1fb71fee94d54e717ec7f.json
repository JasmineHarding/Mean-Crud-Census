{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"./../../service/crud.service\";\nexport class CensusDetailComponent {\n  constructor(formBuilder, router, ngZone, activatedRoute, crudService) {\n    this.formBuilder = formBuilder;\n    this.router = router;\n    this.ngZone = ngZone;\n    this.activatedRoute = activatedRoute;\n    this.crudService = crudService;\n    this.getid = this.activatedRoute.snapshot.paramMap.get('id');\n    this.updateForm = this.formBuilder.group({\n      street: [''],\n      city: [''],\n      state: [''],\n      zip: [''],\n      number_of_people: [''],\n      year: [''],\n      census_taker: ['']\n    });\n  }\n  ngOnInit() {\n    this.crudService.GetCensus(this.getid).subscribe(res => {\n      console.log('Fetched data:', res);\n      this.updateForm.patchValue({\n        street: res['street'],\n        city: res['city'],\n        state: res['state'],\n        zip: res['zip'],\n        number_of_people: res['number_of_people'],\n        year: res['year'],\n        census_taker: res['census_taker']\n      });\n    }, err => {\n      console.error('Error fetching data:', err);\n    });\n  }\n  onUpdate() {\n    this.crudService.updateCensus(this.getid, this.updateForm.value).subscribe(() => {\n      console.log('Data update successfully!');\n      this.ngZone.run(() => this.router.navigateByUrl('/census'));\n    }, err => {\n      console.error('Error updating data:', err);\n    });\n  }\n  static #_ = this.ɵfac = function CensusDetailComponent_Factory(t) {\n    return new (t || CensusDetailComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.CrudService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CensusDetailComponent,\n    selectors: [[\"app-census-detail\"]],\n    decls: 49,\n    vars: 1,\n    consts: [[1, \"container\", \"mt-5\"], [1, \"row\", \"justify-content-center\"], [1, \"col-md-6\"], [1, \"add-census-form\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\", \"mb-3\"], [\"for\", \"year\"], [\"id\", \"year\", \"type\", \"text\", \"formControlName\", \"year\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"census_taker\"], [\"id\", \"census_taker\", \"type\", \"text\", \"formControlName\", \"census_taker\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"number_of_people\"], [\"id\", \"number_of_people\", \"type\", \"text\", \"formControlName\", \"number_of_people\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"street\"], [\"id\", \"street\", \"type\", \"text\", \"formControlName\", \"street\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"city\"], [\"id\", \"city\", \"type\", \"text\", \"formControlName\", \"city\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"state\"], [\"id\", \"state\", \"type\", \"text\", \"formControlName\", \"state\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"zip\"], [\"id\", \"zip\", \"type\", \"text\", \"formControlName\", \"zip\", \"required\", \"\", 1, \"form-control\"], [1, \"form-group\", \"mt-4\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"]],\n    template: function CensusDetailComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"form\", 3);\n        i0.ɵɵlistener(\"ngSubmit\", function CensusDetailComponent_Template_form_ngSubmit_3_listener() {\n          return ctx.onUpdate();\n        });\n        i0.ɵɵelementStart(4, \"div\", 4)(5, \"label\", 5);\n        i0.ɵɵtext(6, \"Year:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"br\")(8, \"input\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"br\");\n        i0.ɵɵelementStart(10, \"div\", 4)(11, \"label\", 7);\n        i0.ɵɵtext(12, \"Census Taker:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"br\")(14, \"input\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"br\");\n        i0.ɵɵelementStart(16, \"div\", 4)(17, \"label\", 9);\n        i0.ɵɵtext(18, \"Number of People:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(19, \"br\")(20, \"input\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(21, \"br\");\n        i0.ɵɵelementStart(22, \"div\", 4)(23, \"label\", 11);\n        i0.ɵɵtext(24, \"Street:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(25, \"br\")(26, \"input\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(27, \"br\");\n        i0.ɵɵelementStart(28, \"div\", 4)(29, \"label\", 13);\n        i0.ɵɵtext(30, \"City:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(31, \"br\")(32, \"input\", 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(33, \"br\");\n        i0.ɵɵelementStart(34, \"div\", 4)(35, \"label\", 15);\n        i0.ɵɵtext(36, \"State:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(37, \"br\")(38, \"input\", 16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(39, \"br\");\n        i0.ɵɵelementStart(40, \"div\", 4)(41, \"label\", 17);\n        i0.ɵɵtext(42, \"Zip:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(43, \"br\")(44, \"input\", 18);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(45, \"br\");\n        i0.ɵɵelementStart(46, \"div\", 19)(47, \"button\", 20);\n        i0.ɵɵtext(48, \"Update Census\");\n        i0.ɵɵelementEnd()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.updateForm);\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName],\n    encapsulation: 2\n  });\n}","map":{"version":3,"names":["CensusDetailComponent","constructor","formBuilder","router","ngZone","activatedRoute","crudService","getid","snapshot","paramMap","get","updateForm","group","street","city","state","zip","number_of_people","year","census_taker","ngOnInit","GetCensus","subscribe","res","console","log","patchValue","err","error","onUpdate","updateCensus","value","run","navigateByUrl","_","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","Router","NgZone","ActivatedRoute","i3","CrudService","_2","selectors","decls","vars","consts","template","CensusDetailComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","CensusDetailComponent_Template_form_ngSubmit_3_listener","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\chops\\OneDrive\\Desktop\\CIS360\\Week 5\\FinalExam\\mean-crud-census\\src\\app\\components\\census-detail\\census-detail.component.ts","C:\\Users\\chops\\OneDrive\\Desktop\\CIS360\\Week 5\\FinalExam\\mean-crud-census\\src\\app\\components\\census-detail\\census-detail.component.html"],"sourcesContent":["import { Component, OnInit, NgZone } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { CrudService } from './../../service/crud.service';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-census-detail',\r\n  templateUrl: './census-detail.component.html',\r\n})\r\n\r\nexport class CensusDetailComponent implements OnInit {\r\n  getid: any;\r\n  updateForm: FormGroup;\r\n\r\n  constructor(\r\n    public formBuilder: FormBuilder,\r\n    private router: Router, \r\n    private ngZone: NgZone, \r\n    private activatedRoute: ActivatedRoute, \r\n    private crudService: CrudService\r\n  ) {\r\n    this.getid = this.activatedRoute.snapshot.paramMap.get('id');\r\n\r\n    this.updateForm = this.formBuilder.group({\r\n      street: [''],\r\n      city: [''],\r\n      state: [''],\r\n      zip: [''],\r\n      number_of_people: [''],\r\n      year: [''],\r\n      census_taker: ['']\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.crudService.GetCensus(this.getid).subscribe(res => {\r\n      console.log('Fetched data:', res); \r\n      this.updateForm.patchValue({\r\n        street: res['street'],\r\n        city: res['city'],\r\n        state: res['state'],\r\n        zip: res['zip'],\r\n        number_of_people: res['number_of_people'],\r\n        year: res['year'],\r\n        census_taker: res['census_taker'],\r\n      });\r\n    }, (err) => {\r\n      console.error('Error fetching data:', err);\r\n    });\r\n  }\r\n\r\n  onUpdate(): any {\r\n    this.crudService.updateCensus(this.getid, this.updateForm.value)\r\n      .subscribe(() => {\r\n        console.log('Data update successfully!');\r\n        this.ngZone.run(() => this.router.navigateByUrl('/census'));\r\n      }, (err) => {\r\n        console.error('Error updating data:', err);\r\n      });\r\n  }\r\n}\r\n\r\n","<div class=\"container mt-5\">\r\n  <div class=\"row justify-content-center\">\r\n    <div class=\"col-md-6\">\r\n      <form [formGroup]=\"updateForm\" (ngSubmit)=\"onUpdate()\" class=\"add-census-form\">\r\n\r\n        <div class=\"form-group mb-3\">\r\n          <label for=\"year\">Year:</label>\r\n          <br>\r\n          <input id=\"year\" class=\"form-control\" type=\"text\" formControlName=\"year\" required>\r\n        </div><br>\r\n\r\n        <div class=\"form-group mb-3\">\r\n          <label for=\"census_taker\">Census Taker:</label>\r\n          <br>\r\n          <input id=\"census_taker\" class=\"form-control\" type=\"text\" formControlName=\"census_taker\" required>\r\n        </div><br>\r\n\r\n        <div class=\"form-group mb-3\">\r\n          <label for=\"number_of_people\">Number of People:</label>\r\n          <br>\r\n          <input id=\"number_of_people\" class=\"form-control\" type=\"text\" formControlName=\"number_of_people\" required>\r\n        </div><br>\r\n\r\n        <div class=\"form-group mb-3\">\r\n          <label for=\"street\">Street:</label>\r\n          <br>\r\n          <input id=\"street\" class=\"form-control\" type=\"text\" formControlName=\"street\" required>\r\n        </div><br>\r\n\r\n        <div class=\"form-group mb-3\">\r\n          <label for=\"city\">City:</label>\r\n          <br>\r\n          <input id=\"city\" class=\"form-control\" type=\"text\" formControlName=\"city\" required>\r\n        </div><br>\r\n\r\n        <div class=\"form-group mb-3\">\r\n          <label for=\"state\">State:</label>\r\n          <br>\r\n          <input id=\"state\" class=\"form-control\" type=\"text\" formControlName=\"state\" required>\r\n        </div><br>\r\n\r\n        <div class=\"form-group mb-3\">\r\n          <label for=\"zip\">Zip:</label>\r\n          <br>\r\n          <input id=\"zip\" class=\"form-control\" type=\"text\" formControlName=\"zip\" required>\r\n        </div><br>\r\n\r\n        <div class=\"form-group mt-4\">\r\n          <button class=\"btn btn-primary\" type=\"submit\">Update Census</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}